version: "2"
services:
  # Nginx web server
  nginx:
    restart: always
    # use image without Certbot
    <%=(!certbot ? '' : '#')%>image: trambar/trambar-nginx:${TRAMBAR_BUILD}
    # use image with Certbot
    <%=(certbot ? '' : '#')%>image: trambar/trambar-nginx-certbot:${TRAMBAR_BUILD}
    ports:
      - ${TRAMBAR_HTTP_PORT}:80
      # set HTTPS port
      <%=(ssl ? '' : '#')%>- ${TRAMBAR_HTTPS_PORT}:443
    volumes:
      # mount directory for additional config files
      - ./extra:/etc/nginx/extra
      # mount directory for media files
      - ${TRAMBAR_MEDIA_FOLDER}:/var/cache/media:z
      # mount directory containing SSL cert and key
      <%=(ssl && !certbot ? '' : '#')%>- ${TRAMBAR_SSL_FOLDER}:${TRAMBAR_SSL_FOLDER}
      # mount volume for holding Certbot cert and key
      <%=(certbot ? '' : '#')%>- /etc/letsencrypt
    environment:
      # set domain name
      <%=(ssl ? '' : '#')%>- DOMAIN=${TRAMBAR_SSL_DOMAIN}
      # set paths to cert and private key
      <%=(ssl && !certbot ? '' : '#')%>- CERT_PATH=${TRAMBAR_SSL_CERT}
      <%=(ssl && !certbot ? '' : '#')%>- KEY_PATH=${TRAMBAR_SSL_KEY}
      # set contact e-mail (for Certbot)
      <%=(certbot ? '' : '#')%>- EMAIL=${TRAMBAR_SSL_EMAIL}
    depends_on:
      - data_server
      - event_notifier
  # PostgreSQL database manager
  postgres:
    restart: always
    image: trambar/trambar-postgres:${TRAMBAR_BUILD}
    volumes:
      # mount directory for database
      - ${TRAMBAR_DATABASE_FOLDER}:/var/lib/postgresql/data:Z
    environment:
      # set PostgreSQL root credentials
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ROOT_PASSWORD}
  schema_manager:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      # set Node.js include paths
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      # set PostgreSQL database name and credentials
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ROOT_PASSWORD}
      - DATABASE_ADMIN_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
      - DATABASE_CLIENT_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
      - DATABASE_AUTH_PASSWORD=${TRAMBAR_DATABASE_AUTH_PASSWORD}
    command: [ node, schema-manager.js ]
    depends_on:
      - postgres
  # Data server (Node.js)
  data_server:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=client_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
    command: [ node, data-server.js ]
    depends_on:
      - postgres
  # Admin data server (Node.js)
  admin_data_server:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=admin_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
    command: [ node, data-server.js ]
    depends_on:
      - postgres
  # Authentication manager (Node.js)
  session_manager:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    volumes:
      - ${TRAMBAR_HTPASSWD_FOLDER}:/etc/trambar
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=auth_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_AUTH_PASSWORD}
      - HTPASSWD_PATH=/etc/trambar/${TRAMBAR_HTPASSWD_NAME}
    command: [ node, session-manager.js ]
    depends_on:
      - postgres
  # Media server (Node.js)
  media_server:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    volumes:
      - ${TRAMBAR_MEDIA_FOLDER}:/var/cache/media:z
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=client_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
    command: [ node, media-server.js ]
    depends_on:
      - postgres
  # WebSocket Notifier (Node.js)
  event_notifier:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=client_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
    command: [ node, event-notifier.js ]
    depends_on:
      - postgres
  # Live Data Invalidator (Node.js)
  live_data_invalidator:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=client_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
    command: [ node, live-data-invalidator.js ]
    depends_on:
      - postgres
  # Live Data Updater (Node.js)
  live_data_updater:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=client_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
    command: [ node, live-data-updater.js ]
    depends_on:
      - postgres
  # GitLab Adapter (Node.js)
  gitlab_adapter:
    restart: always
    image: trambar/trambar-node:${TRAMBAR_BUILD}
    environment:
      - NODE_PATH=/opt/trambar/backend/node_modules:/opt/trambar/backend/src:/opt/trambar/backend/src/lib:/opt/trambar/common/src
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${TRAMBAR_DATABASE_NAME}
      - POSTGRES_USER=admin_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
    command: [ node, gitlab-adapter.js ]
    depends_on:
      - postgres

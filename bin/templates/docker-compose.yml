version: "2"
volumes:
  web_cache:
services:
  nginx:                        # Nginx web server
    extends: { file: nginx.yml, service: nginx }
    depends_on:
      - data_server
      - event_notifier
  postgres:                     # PostgreSQL database manager
    extends: { file: postgres.yml, service: postgres }
  schema_manager:               # Database schema manager (Node.js)
    extends: { file: node.yml, service: node }
    environment:
      - NODE_ENV=production
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ROOT_PASSWORD}
      - DATABASE_ADMIN_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
      - DATABASE_CLIENT_PASSWORD=${TRAMBAR_DATABASE_CLIENT_PASSWORD}
      - DATABASE_AUTH_PASSWORD=${TRAMBAR_DATABASE_AUTH_PASSWORD}
    depends_on:
      - postgres
    command: [ node, --experimental-modules, schema-manager.js ]
  data_server:                  # Data server (Node.js)
    extends: { file: node.yml, service: node }
    depends_on:
      - postgres
    command: [ node, --experimental-modules, data-server.js ]
  admin_data_server:            # Admin data server (Node.js)
    extends: { file: node.yml, service: node }
    environment:
      - POSTGRES_USER=admin_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
    depends_on:
      - postgres
    command: [ node, --experimental-modules, data-server.js ]
  session_manager:              # Authentication manager (Node.js)
    extends: { file: node.yml, service: node }
    volumes:
      - ${TRAMBAR_HTPASSWD_FOLDER}:/etc/trambar
    environment:
      - POSTGRES_USER=auth_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_AUTH_PASSWORD}
      - HTPASSWD_PATH=/etc/trambar/${TRAMBAR_HTPASSWD_NAME}
    depends_on:
      - postgres
    command: [ node, --experimental-modules, session-manager.js ]
  media_server:                 # Media server (Node.js)
    extends: { file: node.yml, service: node }
    volumes:
      - ${TRAMBAR_MEDIA_FOLDER}:/var/cache/media:z
    depends_on:
      - postgres
    command: [ node, --experimental-modules, media-server.js ]
  event_notifier:               # WebSocket Notifier (Node.js)
    extends: { file: node.yml, service: node }
    depends_on:
      - postgres
    command: [ node, --experimental-modules, event-notifier.js ]
  live_data_invalidator:        # Live Data Invalidator (Node.js)
    extends: { file: node.yml, service: node }
    depends_on:
      - postgres
    command: [ node, --experimental-modules, live-data-invalidator.js ]
  live_data_updater:            # Live Data Updater (Node.js)
    extends: { file: node.yml, service: node }
    depends_on:
      - postgres
    command: [ node, --experimental-modules, live-data-updater.js ]
  gitlab_adapter:               # GitLab Adapter (Node.js)
    extends: { file: node.yml, service: node }
    environment:
      - POSTGRES_USER=admin_role
      - POSTGRES_PASSWORD=${TRAMBAR_DATABASE_ADMIN_PASSWORD}
    depends_on:
      - postgres
    command: [ node, --experimental-modules, gitlab-adapter.js ]
